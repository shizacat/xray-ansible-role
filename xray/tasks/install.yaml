- name: Install | Check currently installed Xray version
  ansible.builtin.slurp:
    src: "{{ (xray_bin_path, 'version') | path_join }}"
  register: xray_version_current
  failed_when: false

- name: Install | Get release, unpack, install, clean up
  when: (xray_version_current.content is not defined) or (xray_version_current.content | b64decode | default('') | trim != xray_version)
  block:
    - name: Ensure unzip is installed
      ansible.builtin.package:
        name: unzip
        state: present

    - name: Download Xray binaries
      ansible.builtin.get_url:
        url: "{{ xray_package_url }}"
        dest: "{{ xray_filename_tmp }}"
        mode: '0644'
        validate_certs: false

    - name: Create Xray directory
      ansible.builtin.file:
        path: "{{ xray_bin_path }}"
        state: directory
        mode: '0644'

    - name: Unzip Xray binaries
      ansible.builtin.unarchive:
        src: "{{ xray_filename_tmp }}"
        dest: "{{ xray_bin_path }}"
        mode: '0644'
        remote_src: true

    - name: Make Xray binary executable
      ansible.builtin.file:
        path: "{{ (xray_bin_path, 'xray') | path_join }}"
        mode: '0755'

    - name: Store Xray version
      ansible.builtin.copy:
        content: "{{ xray_version }}"
        dest: "{{ (xray_bin_path, 'version') | path_join }}"
        mode: '0644'

    - name: Cleanup downloaded zip
      ansible.builtin.file:
        path: "{{ xray_filename_tmp }}"
        state: absent
